Ques: Given an array arr[] of size n containing 0 and 1 only. The problem is to count the subarrays having an equal number of 0’s and 1’s.

Input: arr[] = {1, 0, 0, 1, 0, 1, 1}
Output: 8
Explanation: The index range for the 8 sub-arrays are: (0, 1), (2, 3), (0, 3), (3, 4), (4, 5)(2, 5), (0, 5), (1, 6)

Input: arr = { 1, 0, 0, 1, 1, 0, 0, 1}
Output: 12

Soln: 



public int solve(int[] arr){
	int ans=0;

	HashMap<Integer, Integer> map = new HashMap<>();
	map.put(0,1);

	int sum=0;

	for(int i=0;i<arr.length;i++){
		if(sum==0){
			sum+= -1;
		}
		else{
			sum+= +1;
		}
		
		if(map.containsKey(sum)){
			ans+=map.get(sum);
			map.put(sum,map.get(sum)+1);
		}
		else{
			map.put(sum,1);
		}
	} 
	return ans;
}