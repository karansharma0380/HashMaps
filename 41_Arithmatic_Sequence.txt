Ques: Given an array of numbers we have to find whether the elements of arrays can form an arithmatic progression or not.

i/p: 17 9 5 29 1 25 13 37 21 33
o/p:True

Soln:

	 17 9 5 29 1 25 13 37 21 33

	 1  5 9 13 17 21 25 29 33 37  - Difference of 4

AP: a	 a+d   a+2d   a+2d    ...     a+(n-1)d
    a0   a1    a2      a3     ...      a(n)

		an = a0 + (n-1)d
		d = an-a0/n-1


public boolean solve(int[] arr){
	if(arr.length()<=1){ //Imp It will always be an AP
		return true;
	}
	int max = Integer.MIN_VALUE;
	int min = Integer.MAX_VALUE;
	
	HashSet<Integer> set= new HashSet<>();	
	for(int val:arr){
		max = Math.max(val,max);  //Finding the max value
		min = Math.min(val,min); //Finding the min value
		set.add(val);  //Keep the elements to the set.
	}

	int d = (max-min)/(arr.length-1); // Difference
	for(int i=0;i<arr.length;i++){
		int ai = min + i*d; //Our formula
		if(set.contains(ai)==false){
			return false;
		}
	}

	return true;
}